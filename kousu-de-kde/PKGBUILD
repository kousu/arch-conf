pkgname=kousu-de-kde
pkgdesc="Configuration management for KDE"
arch=('any')
url="https://github.com/kousu/arch-conf"
#license=("MIT") # there..is no license? not really?

#  # This numbers the package versions by how many commits went into it: every published commit is a newer package.
#  # This will break if we ever rebase the master branch. Don't do that.
#  # It also breaks when run under pikaur, so it's not really an option
#pkgver="$(git log --pretty=oneline | wc -l)"
pkgver=98
pkgrel=1

depends=(
  ## GUI :: Desktop Environment :: KDE
  #breeze-gtk # themes GTK apps to match the KDE ones..but I don't know how to use it yet.
  plasma-desktop
  plasma-workspace-wallpapers # extra KDE wallpapers
  powerdevil # KDE plugin for power management
  bluedevil  # KDE plugin for Bluetooth
  plasma-pa  # KDE plugin for audio management
  plasma-systemmonitor # KDE task manager (i.e. GUI version of top)
  kscreen    # KDE plugin for screen management? I think?
  khotkeys   # KDE plugin to configure/listen for custom shortcut keys

  # thse are kde-applications-meta, split out so I can be choosier
  #kde-accessibility-meta
  #kde-education-meta
  kde-graphics-meta
  #kde-multimedia-meta
  #kde-network-meta
  #kde-pim-meta
  kde-sdk-meta
  kde-system-meta
  kde-utilities-meta
  #kdevelop-meta

  discover       # GUI for pacman (cool!)
  packagekit-qt5 #  -> plugin that actually makes it work on Arch

  # for a more interesting DE:
  # install the 'maui' group

)

package() {
  # often PKGBUILDs use install(1) here, because it lets them control permissions
  # but install(1) can't do folders recursively; so instead, just cp -r, and set any permissions directly with chmod
  # that's safe enough: this is *building* a package for later deployment, not installing on a live system where a temporary gap in permissions is a risk
  cp -rp * "${pkgdir}"

  # KDE config files are all 0600, and dirs are 0755
  # this doesn't set that; this sets 0600 for files and 0700 for dirs. But that's probably good enough.
  chmod -R u=rwX,go= "${pkgdir}"/etc/skel/.config/{k*,baloo*}
}

# and then i want to also figure out how/where to set KDE system defaults
# with GTK I know it's 'dconf' or 'gconf' (why are there two? who knows)
# and Firefox defaults too; plus extra Firefox extensions


# To control KDE settings:
# - add a file to src/etc/skel/.config/kdedefaults/
#   you can figure out what you need to edit by making a change in the GUI, then examining ~/.config/{kdeglobals,kwinrc}
#   whatever settings you see, copy them to the corresponding file *under* ~/.config/kdedefaults/.
# To control GTK/GNOME settings:
# - ...
# To control Firefox settings:
# - ...
# To control xsession settings:
# - if you're using sx, or xinit, or ...whazzit ~/.xsession
#
# In general, if you can't figure it out how to write a config file for a given app, you can do:
#   1. cp -r ~/.config A
#   1. make the change in the app's settings/GUI
#   2. cp -r ~/.config B
#   3. diff -ru A/ B/
# This should identify the change.
# Some apps don't use ~/.config, but they're getting rarer.


## Some tricky things that should be documented somewhere:
#
# - src/etc/systemd/system/user@.service: this symlink is the same as `systemctl mask user@.service`.
#   It disables `systemd --user`, an incomplete and buggy feature in systemd that causes more problems
#   than it solves: https://github.com/systemd/systemd/issues/7261
#   XXX this is re-enabled for now: KDE doesn't get along without it, there's some error about dbus-launch :(
