# Note: to *bootstrap* a system using this, you need to:
# 1. have pacman installed
# 2. pacman -S --noconfirm base-devel
# 3. makepkg --nodeps # because you won't have the dependencies yet and makepkg assumes you need them to build (even if they're only runtime dependencies; which, in this case, they are)
# 4. pacman -U kousu-nigiri*.pkg*

pkgname=kousu-desktop
pkgdesc="Configuration management for kousu"
arch=('any')
url="https://github.com/kousu/arch-conf"
#license=("MIT") # there..is no license? not really?

#  # This numbers the package versions by how many commits went into it: every published commit is a newer package.
#  # This will break if we ever rebase the master branch. Don't do that.
#  # It also breaks when run under pikaur, so it's not really an option
#pkgver="$(git log --pretty=oneline | wc -l)"
pkgver=101
pkgrel=1

depends=(
  # Base system
  base
  man-db # the 'man' command
  man-pages # the core linux man pages (kernel, libc, file formats)
  reflector # for updating /etc/pacman.d/mirrorlist
  etckeeper # for tracking /etc/'s changes; (this is redundant with this package itself; but it's a useful redundancy, that helps me figure out what to change)
  pacman-contrib # pactree, pacdiff, etc

  # hardware
  linux  # the kernel. on Arch, this is an *optional* package, so that you can install vanilla Arch inside a container.
  linux-firmware-intel
  dmidecode # reads low-level BIOS information
  intel-ucode
  amd-ucode # TODO: these two packages have an optional but difficult amount of manaul setup:
            # https://wiki.archlinux.org/title/Microcode#Early_loading
            # basically you need to edit your kernel command line to *prepend* initrd=/boot/amd-ucode.img,/boot/intel-ucode.img,
            # and making that edit by script is tricky. and also in the early boot that path is not always at /boot? ai yi yi
  e2fsprogs
  dosfstools

  broadcom-wl # if we were booted on a system with only broadcom wifi we would be stuck without these drivers
  iwd # wifi
  #macchanger # not needed if using iwd's AddressRandomization
  sysstat   # iostat, some other things..
  hdparm
  lshw
  lsof
  iftop
  iotop
  nethogs
  net-tools # netstat, ifconfig
  #inetutils # for hostname(1); also has telnet(1), rsh(1), and other deprecated commands
  strace
  openconnect  # VPN

  alsa-utils

  bluez-utils  # also pulls in the rest of bluetooth # XXX do I need to add `systemctl enable --now bluetooth` somewhere?
  pulseaudio-bluetooth # pairing some (most?) headphones is impossible without this: https://bbs.archlinux.org/viewtopic.php?id=270465&p=2

  yubikey-manager


  # CLI
  bash-completion  # lets apps customize tab completion; it's handy for pass(1) and kubectl(1) and some others, but intereferes and is annoying when apps provide incomplete tab completion because it *disables* the default behaviour of files.
  sudo
  openssh
  openbsd-netcat
  socat
  pass # password manager
  pass-otp
  pwgen # alternate password generator
  rsync
  fdupes
  sshfs

  # requires some extra setup (included in src/ and below): https://wiki.archlinux.org/title/podman#Rootless_Podman
  podman-docker

  #fio   # speed testing

  # CLI :: Network
  bind      # dig
  whois
  tcpdump
  nmap
  geoip
  geoip-database-extra
  #macchanger

  # CLI :: Programming
  base-devel

  # Here's the contents of base-devel (except those already covered by base), listed explicitly; this list extracted
  # (with the help of https://catonmat.net/set-operations-in-unix-shell) by
  # $ grep -vxF -f <(pacman -Qi base | grep Depends | cut -d ':' -f 2 | awk -v 'RS= ' '/.+/ {print}') <(pacman -Sgq base-devel)
  autoconf
  automake
  binutils
  bison
  fakeroot
  flex
  gcc
  groff
  libtool
  m4
  make
  patch
  pkgconf
  sudo
  texinfo
  which
  words

  git
  git-filter-repo
  #git-lfs
  #git-annex

  zip
  unrar
  unzip

  python
  python-pip
  python-wheel
  python-build

  #nodejs
  #npm

  jq
  htmlq

  strip-nondeterminism
  parallel

  android-tools # adb! fastest way to get files in and out of a phone
  #jad
  #hollywood  # 'hacking'

  # decompiler
  #rizin
  #rz-ghidra
  #dotpeek

  # TUI
  vi     # editor
  #vim
  htop   # resource/process monitor
  ranger # curses file browser
  #lynx, or elinks, links, w3m # terminal browser

  # GUI
  #xorg-xinit # weirdly you can install X without xorg-xinit on Arch; I guess because lightdm/gdm/etc can serve its purpose?
  #xorg-server # weirdly, xorg-xinit doesn't pull this in; you'd think it would.
  #sx # alternative to xorg-xinit; promises to be simpler; is it actually? # XXX this is only in the aur
  #xorg-xhost
  xorg-xmodmap
  xorg-xkill
  xorg-xev
  xorg-fonts-100dpi
  xorg-fonts-75dpi
  noto-fonts-emoji # Google's Android emoji fonts, with the colourful faces and whatnot
  terminus-font
  otf-fira-sans

  # lightdm ?
  xclip
  #peek  # screen recorder (unmaintained. but it is sooo user friendly)
  vokoscreen # screen recorder

  ## GUI :: Hardware
  wireshark-qt

  transmission-qt
  #transmission-gtk # more traditional? But I'm trying out a KDE-based system...

  ## GUI :: Desktop Environment
  #kousu-de-kde
  #kousu-de-maui  # for a more interesting DE
  kousu-de-i3

  #gvfs
  #gvfs-smb
  #gvfs-mtp
  #udisks2

  ## GUI :: Editors
  #libreoffice-fresh # documents/spreadsheets/presentations/etc
  apostrophe  # .md focus mode editor
  xournalpp   # PDF editor; mostly good for signing legal documents.
  #qpdf       # another PDF editor, less tools but more accurate
  obsidian    # Notebook
  # zettlr    # alternative notebook (obsidian is more popular and has lots of plugins)

  ## GUI :: Programming
  #rz-cutter

  ## GUI :: Web
  firefox
  firefox-decentraleyes
  firefox-extension-passff
  firefox-ublock-origin
  # XXX there's now also extra/ublock-origin?
  #chromium # very, very large
  gnome-recipes  # online cookbook

  ## GUI :: Comms
  dino
  signal-desktop

  ## GUI :: Media
  vlc # ?? or maybe i should just use whatever comes with KDE?
  vlc-plugin-ogg
  shortwave # radio-browser.info client

  ## Games
  #xboard
  #gnuchess  # "optional" for xboard, but not really: it's the AI to play against
  #openra
  #endless-sky
  #kgeography
)

# `source` has some basic support for handling local files
# but it expects them to all be in the top-level folder. It's not really meant for bundling an entire directory tree,
# and to handle a directory tree it expects to be given a .tar to extract into src/
# Instead, I've committed the contents of this package *directly* to src/.

install="arch-conf.install"

backup=(
  # user-editable config files
  etc/locale.conf
)

package() {
  # often PKGBUILDs use install(1) here, because it lets them control permissions
  # but install(1) can't do folders recursively; so instead, just cp -r, and set any permissions directly with chmod
  # that's safe enough: this is *building* a package for later deployment, not installing on a live system where a temporary gap in permissions is a risk
  cp -rp * "${pkgdir}"

  chmod 750 "${pkgdir}"/etc/sudoers.d
  chmod 600 "${pkgdir}"/etc/sudoers.d/*
}

# To control GTK/GNOME settings:
# - 'dconf' or 'gconf' (why are there two? who knows)
# To control Firefox settings:
# - Firefox defaults javascripts; plus extra Firefox extensions
# To control xsession settings:
# - if you're using sx, or xinit, or ...whazzit ~/.xsession
#
# In general, if you can't figure it out how to write a config file for a given app, you can do:
#   1. cp -r ~/.config A
#   1. make the change in the app's settings/GUI
#   2. cp -r ~/.config B
#   3. diff -ru A/ B/
# This should identify the change.
# Some apps don't use ~/.config, but they're getting rarer.


## Some tricky things that should be documented somewhere:
#
# - src/etc/systemd/system/user@.service: this symlink is the same as `systemctl mask user@.service`.
#   It disables `systemd --user`, an incomplete and buggy feature in systemd that causes more problems
#   than it solves: https://github.com/systemd/systemd/issues/7261
#   XXX this is re-enabled for now: KDE doesn't get along without it, there's some error about dbus-launch :(
